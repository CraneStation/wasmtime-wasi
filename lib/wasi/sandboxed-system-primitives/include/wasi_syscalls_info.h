// Copyright (c) 2016-2017 Nuxi (https://nuxi.nl/) and contributors.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// This file is automatically generated. Do not edit.
//
// Source: https://github.com/NuxiNL/cloudabi

#ifndef WASI_SYSCALLS_INFO_H
#define WASI_SYSCALLS_INFO_H

#ifdef __cplusplus
extern "C" {
#endif

#define WASI_SYSCALL_NAMES(SYSCALL) \
  SYSCALL(clock_res_get)                \
  SYSCALL(clock_time_get)               \
  SYSCALL(condvar_signal)               \
  SYSCALL(fd_close)                     \
  SYSCALL(fd_create1)                   \
  SYSCALL(fd_create2)                   \
  SYSCALL(fd_datasync)                  \
  SYSCALL(fd_dup)                       \
  SYSCALL(fd_pread)                     \
  SYSCALL(fd_pwrite)                    \
  SYSCALL(fd_read)                      \
  SYSCALL(fd_replace)                   \
  SYSCALL(fd_seek)                      \
  SYSCALL(fd_stat_get)                  \
  SYSCALL(fd_stat_put)                  \
  SYSCALL(fd_sync)                      \
  SYSCALL(fd_write)                     \
  SYSCALL(file_advise)                  \
  SYSCALL(file_allocate)                \
  SYSCALL(file_create)                  \
  SYSCALL(file_link)                    \
  SYSCALL(file_open)                    \
  SYSCALL(file_readdir)                 \
  SYSCALL(file_readlink)                \
  SYSCALL(file_rename)                  \
  SYSCALL(file_stat_fget)               \
  SYSCALL(file_stat_fput)               \
  SYSCALL(file_stat_get)                \
  SYSCALL(file_stat_put)                \
  SYSCALL(file_symlink)                 \
  SYSCALL(file_unlink)                  \
  SYSCALL(lock_unlock)                  \
  SYSCALL(mem_advise)                   \
  SYSCALL(mem_map)                      \
  SYSCALL(mem_protect)                  \
  SYSCALL(mem_sync)                     \
  SYSCALL(mem_unmap)                    \
  SYSCALL(poll)                         \
  SYSCALL(proc_exec)                    \
  SYSCALL(proc_exit)                    \
  SYSCALL(proc_fork)                    \
  SYSCALL(proc_raise)                   \
  SYSCALL(random_get)                   \
  SYSCALL(sock_recv)                    \
  SYSCALL(sock_send)                    \
  SYSCALL(sock_shutdown)                \
  SYSCALL(thread_create)                \
  SYSCALL(thread_exit)                  \
  SYSCALL(thread_yield)

#define WASI_SYSCALL_PARAMETERS_clock_res_get \
  wasi_clockid_t clock_id,                    \
  wasi_timestamp_t *resolution

#define WASI_SYSCALL_PARAMETERS_clock_time_get \
  wasi_clockid_t clock_id,                     \
  wasi_timestamp_t precision,                  \
  wasi_timestamp_t *time

#define WASI_SYSCALL_PARAMETERS_condvar_signal \
  _Atomic(wasi_condvar_t) *condvar,            \
  wasi_scope_t scope,                          \
  wasi_nthreads_t nwaiters

#define WASI_SYSCALL_PARAMETERS_fd_close \
  wasi_fd_t fd

#define WASI_SYSCALL_PARAMETERS_fd_create1 \
  wasi_filetype_t type,                    \
  wasi_fd_t *fd

#define WASI_SYSCALL_PARAMETERS_fd_create2 \
  wasi_filetype_t type,                    \
  wasi_fd_t *fd1,                          \
  wasi_fd_t *fd2

#define WASI_SYSCALL_PARAMETERS_fd_datasync \
  wasi_fd_t fd

#define WASI_SYSCALL_PARAMETERS_fd_dup \
  wasi_fd_t from,                      \
  wasi_fd_t *fd

#define WASI_SYSCALL_PARAMETERS_fd_pread \
  wasi_fd_t fd,                          \
  const wasi_iovec_t *iovs,              \
  size_t iovs_len,                           \
  wasi_filesize_t offset,                \
  size_t *nread

#define WASI_SYSCALL_PARAMETERS_fd_pwrite \
  wasi_fd_t fd,                           \
  const wasi_ciovec_t *iovs,              \
  size_t iovs_len,                            \
  wasi_filesize_t offset,                 \
  size_t *nwritten

#define WASI_SYSCALL_PARAMETERS_fd_read \
  wasi_fd_t fd,                         \
  const wasi_iovec_t *iovs,             \
  size_t iovs_len,                          \
  size_t *nread

#define WASI_SYSCALL_PARAMETERS_fd_replace \
  wasi_fd_t from,                          \
  wasi_fd_t to

#define WASI_SYSCALL_PARAMETERS_fd_seek \
  wasi_fd_t fd,                         \
  wasi_filedelta_t offset,              \
  wasi_whence_t whence,                 \
  wasi_filesize_t *newoffset

#define WASI_SYSCALL_PARAMETERS_fd_stat_get \
  wasi_fd_t fd,                             \
  wasi_fdstat_t *buf

#define WASI_SYSCALL_PARAMETERS_fd_stat_put \
  wasi_fd_t fd,                             \
  const wasi_fdstat_t *buf,                 \
  wasi_fdsflags_t flags

#define WASI_SYSCALL_PARAMETERS_fd_sync \
  wasi_fd_t fd

#define WASI_SYSCALL_PARAMETERS_fd_write \
  wasi_fd_t fd,                          \
  const wasi_ciovec_t *iovs,             \
  size_t iovs_len,                           \
  size_t *nwritten

#define WASI_SYSCALL_PARAMETERS_file_advise \
  wasi_fd_t fd,                             \
  wasi_filesize_t offset,                   \
  wasi_filesize_t len,                      \
  wasi_advice_t advice

#define WASI_SYSCALL_PARAMETERS_file_allocate \
  wasi_fd_t fd,                               \
  wasi_filesize_t offset,                     \
  wasi_filesize_t len

#define WASI_SYSCALL_PARAMETERS_file_create \
  wasi_fd_t fd,                             \
  const char *path,                             \
  size_t path_len,                              \
  wasi_filetype_t type

#define WASI_SYSCALL_PARAMETERS_file_link \
  wasi_lookup_t fd1,                      \
  const char *path1,                          \
  size_t path1_len,                           \
  wasi_fd_t fd2,                          \
  const char *path2,                          \
  size_t path2_len

#define WASI_SYSCALL_PARAMETERS_file_open \
  wasi_lookup_t dirfd,                    \
  const char *path,                           \
  size_t path_len,                            \
  wasi_oflags_t oflags,                   \
  const wasi_fdstat_t *fds,               \
  wasi_fd_t *fd

#define WASI_SYSCALL_PARAMETERS_file_readdir \
  wasi_fd_t fd,                              \
  void *buf,                                     \
  size_t buf_len,                                \
  wasi_dircookie_t cookie,                   \
  size_t *bufused

#define WASI_SYSCALL_PARAMETERS_file_readlink \
  wasi_fd_t fd,                               \
  const char *path,                               \
  size_t path_len,                                \
  char *buf,                                      \
  size_t buf_len,                                 \
  size_t *bufused

#define WASI_SYSCALL_PARAMETERS_file_rename \
  wasi_fd_t fd1,                            \
  const char *path1,                            \
  size_t path1_len,                             \
  wasi_fd_t fd2,                            \
  const char *path2,                            \
  size_t path2_len

#define WASI_SYSCALL_PARAMETERS_file_stat_fget \
  wasi_fd_t fd,                                \
  wasi_filestat_t *buf

#define WASI_SYSCALL_PARAMETERS_file_stat_fput \
  wasi_fd_t fd,                                \
  const wasi_filestat_t *buf,                  \
  wasi_fsflags_t flags

#define WASI_SYSCALL_PARAMETERS_file_stat_get \
  wasi_lookup_t fd,                           \
  const char *path,                               \
  size_t path_len,                                \
  wasi_filestat_t *buf

#define WASI_SYSCALL_PARAMETERS_file_stat_put \
  wasi_lookup_t fd,                           \
  const char *path,                               \
  size_t path_len,                                \
  const wasi_filestat_t *buf,                 \
  wasi_fsflags_t flags

#define WASI_SYSCALL_PARAMETERS_file_symlink \
  const char *path1,                             \
  size_t path1_len,                              \
  wasi_fd_t fd,                              \
  const char *path2,                             \
  size_t path2_len

#define WASI_SYSCALL_PARAMETERS_file_unlink \
  wasi_fd_t fd,                             \
  const char *path,                             \
  size_t path_len,                              \
  wasi_ulflags_t flags

#define WASI_SYSCALL_PARAMETERS_lock_unlock \
  _Atomic(wasi_lock_t) *lock,               \
  wasi_scope_t scope

#define WASI_SYSCALL_PARAMETERS_mem_advise \
  void *mapping,                               \
  size_t mapping_len,                          \
  wasi_advice_t advice

#define WASI_SYSCALL_PARAMETERS_mem_map \
  void *addr,                               \
  size_t len,                               \
  wasi_mprot_t prot,                    \
  wasi_mflags_t flags,                  \
  wasi_fd_t fd,                         \
  wasi_filesize_t off,                  \
  void **mem

#define WASI_SYSCALL_PARAMETERS_mem_protect \
  void *mapping,                                \
  size_t mapping_len,                           \
  wasi_mprot_t prot

#define WASI_SYSCALL_PARAMETERS_mem_sync \
  void *mapping,                             \
  size_t mapping_len,                        \
  wasi_msflags_t flags

#define WASI_SYSCALL_PARAMETERS_mem_unmap \
  void *mapping,                              \
  size_t mapping_len

#define WASI_SYSCALL_PARAMETERS_poll \
  const wasi_subscription_t *in,     \
  wasi_event_t *out,                 \
  size_t nsubscriptions,                 \
  size_t *nevents

#define WASI_SYSCALL_PARAMETERS_proc_exec \
  wasi_fd_t fd,                           \
  const void *data,                           \
  size_t data_len,                            \
  const wasi_fd_t *fds,                   \
  size_t fds_len

#define WASI_SYSCALL_PARAMETERS_proc_exit \
  wasi_exitcode_t rval

#define WASI_SYSCALL_PARAMETERS_proc_fork \
  wasi_fd_t *fd,                          \
  wasi_tid_t *tid

#define WASI_SYSCALL_PARAMETERS_proc_raise \
  wasi_signal_t sig

#define WASI_SYSCALL_PARAMETERS_random_get \
  void *buf,                                   \
  size_t buf_len

#define WASI_SYSCALL_PARAMETERS_sock_recv \
  wasi_fd_t sock,                         \
  const wasi_recv_in_t *in,               \
  wasi_recv_out_t *out

#define WASI_SYSCALL_PARAMETERS_sock_send \
  wasi_fd_t sock,                         \
  const wasi_send_in_t *in,               \
  wasi_send_out_t *out

#define WASI_SYSCALL_PARAMETERS_sock_shutdown \
  wasi_fd_t sock,                             \
  wasi_sdflags_t how

#define WASI_SYSCALL_PARAMETERS_thread_create \
  wasi_threadattr_t *attr,                    \
  wasi_tid_t *tid

#define WASI_SYSCALL_PARAMETERS_thread_exit \
  _Atomic(wasi_lock_t) *lock,               \
  wasi_scope_t scope

#define WASI_SYSCALL_PARAMETERS_thread_yield

#define WASI_SYSCALL_PARAMETER_NAMES_clock_res_get \
  clock_id, resolution

#define WASI_SYSCALL_PARAMETER_NAMES_clock_time_get \
  clock_id, precision, time

#define WASI_SYSCALL_PARAMETER_NAMES_condvar_signal \
  condvar, scope, nwaiters

#define WASI_SYSCALL_PARAMETER_NAMES_fd_close \
  fd

#define WASI_SYSCALL_PARAMETER_NAMES_fd_create1 \
  type, fd

#define WASI_SYSCALL_PARAMETER_NAMES_fd_create2 \
  type, fd1, fd2

#define WASI_SYSCALL_PARAMETER_NAMES_fd_datasync \
  fd

#define WASI_SYSCALL_PARAMETER_NAMES_fd_dup \
  from, fd

#define WASI_SYSCALL_PARAMETER_NAMES_fd_pread \
  fd, iovs, iovs_len, offset, nread

#define WASI_SYSCALL_PARAMETER_NAMES_fd_pwrite \
  fd, iovs, iovs_len, offset, nwritten

#define WASI_SYSCALL_PARAMETER_NAMES_fd_read \
  fd, iovs, iovs_len, nread

#define WASI_SYSCALL_PARAMETER_NAMES_fd_replace \
  from, to

#define WASI_SYSCALL_PARAMETER_NAMES_fd_seek \
  fd, offset, whence, newoffset

#define WASI_SYSCALL_PARAMETER_NAMES_fd_stat_get \
  fd, buf

#define WASI_SYSCALL_PARAMETER_NAMES_fd_stat_put \
  fd, buf, flags

#define WASI_SYSCALL_PARAMETER_NAMES_fd_sync \
  fd

#define WASI_SYSCALL_PARAMETER_NAMES_fd_write \
  fd, iovs, iovs_len, nwritten

#define WASI_SYSCALL_PARAMETER_NAMES_file_advise \
  fd, offset, len, advice

#define WASI_SYSCALL_PARAMETER_NAMES_file_allocate \
  fd, offset, len

#define WASI_SYSCALL_PARAMETER_NAMES_file_create \
  fd, path, path_len, type

#define WASI_SYSCALL_PARAMETER_NAMES_file_link \
  fd1, path1, path1_len, fd2, path2, path2_len

#define WASI_SYSCALL_PARAMETER_NAMES_file_open \
  dirfd, path, path_len, oflags, fds, fd

#define WASI_SYSCALL_PARAMETER_NAMES_file_readdir \
  fd, buf, buf_len, cookie, bufused

#define WASI_SYSCALL_PARAMETER_NAMES_file_readlink \
  fd, path, path_len, buf, buf_len, bufused

#define WASI_SYSCALL_PARAMETER_NAMES_file_rename \
  fd1, path1, path1_len, fd2, path2, path2_len

#define WASI_SYSCALL_PARAMETER_NAMES_file_stat_fget \
  fd, buf

#define WASI_SYSCALL_PARAMETER_NAMES_file_stat_fput \
  fd, buf, flags

#define WASI_SYSCALL_PARAMETER_NAMES_file_stat_get \
  fd, path, path_len, buf

#define WASI_SYSCALL_PARAMETER_NAMES_file_stat_put \
  fd, path, path_len, buf, flags

#define WASI_SYSCALL_PARAMETER_NAMES_file_symlink \
  path1, path1_len, fd, path2, path2_len

#define WASI_SYSCALL_PARAMETER_NAMES_file_unlink \
  fd, path, path_len, flags

#define WASI_SYSCALL_PARAMETER_NAMES_lock_unlock \
  lock, scope

#define WASI_SYSCALL_PARAMETER_NAMES_mem_advise \
  mapping, mapping_len, advice

#define WASI_SYSCALL_PARAMETER_NAMES_mem_map \
  addr, len, prot, flags, fd, off, mem

#define WASI_SYSCALL_PARAMETER_NAMES_mem_protect \
  mapping, mapping_len, prot

#define WASI_SYSCALL_PARAMETER_NAMES_mem_sync \
  mapping, mapping_len, flags

#define WASI_SYSCALL_PARAMETER_NAMES_mem_unmap \
  mapping, mapping_len

#define WASI_SYSCALL_PARAMETER_NAMES_poll \
  in, out, nsubscriptions, nevents

#define WASI_SYSCALL_PARAMETER_NAMES_proc_exec \
  fd, data, data_len, fds, fds_len

#define WASI_SYSCALL_PARAMETER_NAMES_proc_exit \
  rval

#define WASI_SYSCALL_PARAMETER_NAMES_proc_fork \
  fd, tid

#define WASI_SYSCALL_PARAMETER_NAMES_proc_raise \
  sig

#define WASI_SYSCALL_PARAMETER_NAMES_random_get \
  buf, buf_len

#define WASI_SYSCALL_PARAMETER_NAMES_sock_recv \
  sock, in, out

#define WASI_SYSCALL_PARAMETER_NAMES_sock_send \
  sock, in, out

#define WASI_SYSCALL_PARAMETER_NAMES_sock_shutdown \
  sock, how

#define WASI_SYSCALL_PARAMETER_NAMES_thread_create \
  attr, tid

#define WASI_SYSCALL_PARAMETER_NAMES_thread_exit \
  lock, scope

#define WASI_SYSCALL_PARAMETER_NAMES_thread_yield

#define WASI_SYSCALL_HAS_PARAMETERS_clock_res_get(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_clock_time_get(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_condvar_signal(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_close(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_create1(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_create2(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_datasync(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_dup(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_pread(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_pwrite(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_read(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_replace(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_seek(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_stat_get(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_stat_put(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_sync(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_fd_write(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_advise(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_allocate(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_create(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_link(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_open(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_readdir(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_readlink(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_rename(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_stat_fget(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_stat_fput(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_stat_get(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_stat_put(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_symlink(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_file_unlink(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_lock_unlock(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_mem_advise(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_mem_map(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_mem_protect(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_mem_sync(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_mem_unmap(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_poll(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_proc_exec(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_proc_exit(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_proc_fork(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_proc_raise(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_random_get(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_sock_recv(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_sock_send(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_sock_shutdown(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_thread_create(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_thread_exit(yes, no) yes
#define WASI_SYSCALL_HAS_PARAMETERS_thread_yield(yes, no) no

#define WASI_SYSCALL_RETURNS_clock_res_get(yes, no) yes
#define WASI_SYSCALL_RETURNS_clock_time_get(yes, no) yes
#define WASI_SYSCALL_RETURNS_condvar_signal(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_close(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_create1(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_create2(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_datasync(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_dup(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_pread(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_pwrite(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_read(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_replace(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_seek(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_stat_get(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_stat_put(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_sync(yes, no) yes
#define WASI_SYSCALL_RETURNS_fd_write(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_advise(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_allocate(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_create(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_link(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_open(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_readdir(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_readlink(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_rename(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_stat_fget(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_stat_fput(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_stat_get(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_stat_put(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_symlink(yes, no) yes
#define WASI_SYSCALL_RETURNS_file_unlink(yes, no) yes
#define WASI_SYSCALL_RETURNS_lock_unlock(yes, no) yes
#define WASI_SYSCALL_RETURNS_mem_advise(yes, no) yes
#define WASI_SYSCALL_RETURNS_mem_map(yes, no) yes
#define WASI_SYSCALL_RETURNS_mem_protect(yes, no) yes
#define WASI_SYSCALL_RETURNS_mem_sync(yes, no) yes
#define WASI_SYSCALL_RETURNS_mem_unmap(yes, no) yes
#define WASI_SYSCALL_RETURNS_poll(yes, no) yes
#define WASI_SYSCALL_RETURNS_proc_exec(yes, no) yes
#define WASI_SYSCALL_RETURNS_proc_exit(yes, no) no
#define WASI_SYSCALL_RETURNS_proc_fork(yes, no) yes
#define WASI_SYSCALL_RETURNS_proc_raise(yes, no) yes
#define WASI_SYSCALL_RETURNS_random_get(yes, no) yes
#define WASI_SYSCALL_RETURNS_sock_recv(yes, no) yes
#define WASI_SYSCALL_RETURNS_sock_send(yes, no) yes
#define WASI_SYSCALL_RETURNS_sock_shutdown(yes, no) yes
#define WASI_SYSCALL_RETURNS_thread_create(yes, no) yes
#define WASI_SYSCALL_RETURNS_thread_exit(yes, no) no
#define WASI_SYSCALL_RETURNS_thread_yield(yes, no) yes

#ifdef __cplusplus
}  // extern "C"
#endif

#endif
