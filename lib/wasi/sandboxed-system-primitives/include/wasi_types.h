// Copyright (c) 2016-2017 Nuxi (https://nuxi.nl/) and contributors.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// This file is automatically generated. Do not edit.
//
// Source: https://github.com/NuxiNL/cloudabi

#ifndef WASI_TYPES_H
#define WASI_TYPES_H

#include "wasi_types_common.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct {
  _Alignas(4) wasi_auxtype_t a_type;
  union {
    size_t a_val;
    void *a_ptr;
  };
} wasi_auxv_t;
_Static_assert(offsetof(wasi_auxv_t, a_type) == 0, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_auxv_t, a_val) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_auxv_t, a_val) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_auxv_t, a_ptr) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_auxv_t, a_ptr) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || sizeof(wasi_auxv_t) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || sizeof(wasi_auxv_t) == 16, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || _Alignof(wasi_auxv_t) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || _Alignof(wasi_auxv_t) == 8, "Incorrect layout");

typedef struct {
  const void *buf;
  size_t buf_len;
} wasi_ciovec_t;
_Static_assert(offsetof(wasi_ciovec_t, buf) == 0, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_ciovec_t, buf_len) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_ciovec_t, buf_len) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || sizeof(wasi_ciovec_t) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || sizeof(wasi_ciovec_t) == 16, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || _Alignof(wasi_ciovec_t) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || _Alignof(wasi_ciovec_t) == 8, "Incorrect layout");

typedef struct {
  void *buf;
  size_t buf_len;
} wasi_iovec_t;
_Static_assert(offsetof(wasi_iovec_t, buf) == 0, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_iovec_t, buf_len) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_iovec_t, buf_len) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || sizeof(wasi_iovec_t) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || sizeof(wasi_iovec_t) == 16, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || _Alignof(wasi_iovec_t) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || _Alignof(wasi_iovec_t) == 8, "Incorrect layout");

typedef void wasi_processentry_t(const wasi_auxv_t *auxv);

typedef struct {
  const wasi_iovec_t *ri_data;
  size_t ri_data_len;
  wasi_fd_t *ri_fds;
  size_t ri_fds_len;
  _Alignas(2) wasi_riflags_t ri_flags;
} wasi_recv_in_t;
_Static_assert(offsetof(wasi_recv_in_t, ri_data) == 0, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_recv_in_t, ri_data_len) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_recv_in_t, ri_data_len) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_recv_in_t, ri_fds) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_recv_in_t, ri_fds) == 16, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_recv_in_t, ri_fds_len) == 12, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_recv_in_t, ri_fds_len) == 24, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_recv_in_t, ri_flags) == 16, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_recv_in_t, ri_flags) == 32, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || sizeof(wasi_recv_in_t) == 20, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || sizeof(wasi_recv_in_t) == 40, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || _Alignof(wasi_recv_in_t) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || _Alignof(wasi_recv_in_t) == 8, "Incorrect layout");

typedef struct {
  size_t ro_datalen;
  size_t ro_fdslen;
  _Alignas(1) char ro_unused[40];
  _Alignas(2) wasi_roflags_t ro_flags;
} wasi_recv_out_t;
_Static_assert(offsetof(wasi_recv_out_t, ro_datalen) == 0, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_recv_out_t, ro_fdslen) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_recv_out_t, ro_fdslen) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_recv_out_t, ro_unused) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_recv_out_t, ro_unused) == 16, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_recv_out_t, ro_flags) == 48, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_recv_out_t, ro_flags) == 56, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || sizeof(wasi_recv_out_t) == 52, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || sizeof(wasi_recv_out_t) == 64, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || _Alignof(wasi_recv_out_t) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || _Alignof(wasi_recv_out_t) == 8, "Incorrect layout");

typedef struct {
  const wasi_ciovec_t *si_data;
  size_t si_data_len;
  const wasi_fd_t *si_fds;
  size_t si_fds_len;
  _Alignas(2) wasi_siflags_t si_flags;
} wasi_send_in_t;
_Static_assert(offsetof(wasi_send_in_t, si_data) == 0, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_send_in_t, si_data_len) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_send_in_t, si_data_len) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_send_in_t, si_fds) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_send_in_t, si_fds) == 16, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_send_in_t, si_fds_len) == 12, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_send_in_t, si_fds_len) == 24, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_send_in_t, si_flags) == 16, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_send_in_t, si_flags) == 32, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || sizeof(wasi_send_in_t) == 20, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || sizeof(wasi_send_in_t) == 40, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || _Alignof(wasi_send_in_t) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || _Alignof(wasi_send_in_t) == 8, "Incorrect layout");

typedef struct {
  size_t so_datalen;
} wasi_send_out_t;
_Static_assert(offsetof(wasi_send_out_t, so_datalen) == 0, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || sizeof(wasi_send_out_t) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || sizeof(wasi_send_out_t) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || _Alignof(wasi_send_out_t) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || _Alignof(wasi_send_out_t) == 8, "Incorrect layout");

typedef struct {
  _Alignas(8) wasi_userdata_t userdata;
  _Alignas(2) uint16_t unused;
  _Alignas(1) wasi_eventtype_t type;
  union {
    struct {
      _Alignas(8) wasi_userdata_t identifier;
      _Alignas(4) wasi_clockid_t clock_id;
      _Alignas(8) wasi_timestamp_t timeout;
      _Alignas(8) wasi_timestamp_t precision;
      _Alignas(2) wasi_subclockflags_t flags;
    } clock;
    struct {
      _Atomic(wasi_condvar_t) *condvar;
      _Atomic(wasi_lock_t) *lock;
      _Alignas(1) wasi_scope_t condvar_scope;
      _Alignas(1) wasi_scope_t lock_scope;
    } condvar;
    struct {
      _Alignas(4) wasi_fd_t fd;
      _Alignas(2) wasi_subrwflags_t flags;
    } fd_readwrite;
    struct {
      _Atomic(wasi_lock_t) *lock;
      _Alignas(1) wasi_scope_t lock_scope;
    } lock;
    struct {
      _Alignas(4) wasi_fd_t fd;
    } proc_terminate;
  };
} wasi_subscription_t;
_Static_assert(offsetof(wasi_subscription_t, userdata) == 0, "Incorrect layout");
_Static_assert(offsetof(wasi_subscription_t, unused) == 8, "Incorrect layout");
_Static_assert(offsetof(wasi_subscription_t, type) == 10, "Incorrect layout");
_Static_assert(offsetof(wasi_subscription_t, clock.identifier) == 16, "Incorrect layout");
_Static_assert(offsetof(wasi_subscription_t, clock.clock_id) == 24, "Incorrect layout");
_Static_assert(offsetof(wasi_subscription_t, clock.timeout) == 32, "Incorrect layout");
_Static_assert(offsetof(wasi_subscription_t, clock.precision) == 40, "Incorrect layout");
_Static_assert(offsetof(wasi_subscription_t, clock.flags) == 48, "Incorrect layout");
_Static_assert(offsetof(wasi_subscription_t, condvar.condvar) == 16, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_subscription_t, condvar.lock) == 20, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_subscription_t, condvar.lock) == 24, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_subscription_t, condvar.condvar_scope) == 24, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_subscription_t, condvar.condvar_scope) == 32, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_subscription_t, condvar.lock_scope) == 25, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_subscription_t, condvar.lock_scope) == 33, "Incorrect layout");
_Static_assert(offsetof(wasi_subscription_t, fd_readwrite.fd) == 16, "Incorrect layout");
_Static_assert(offsetof(wasi_subscription_t, fd_readwrite.flags) == 20, "Incorrect layout");
_Static_assert(offsetof(wasi_subscription_t, lock.lock) == 16, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_subscription_t, lock.lock_scope) == 20, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_subscription_t, lock.lock_scope) == 24, "Incorrect layout");
_Static_assert(offsetof(wasi_subscription_t, proc_terminate.fd) == 16, "Incorrect layout");
_Static_assert(sizeof(wasi_subscription_t) == 56, "Incorrect layout");
_Static_assert(_Alignof(wasi_subscription_t) == 8, "Incorrect layout");

typedef struct {
  void *parent;
} wasi_tcb_t;
_Static_assert(offsetof(wasi_tcb_t, parent) == 0, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || sizeof(wasi_tcb_t) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || sizeof(wasi_tcb_t) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || _Alignof(wasi_tcb_t) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || _Alignof(wasi_tcb_t) == 8, "Incorrect layout");

#ifdef WASMTIME_UNMODIFIED
typedef void wasi_threadentry_t(wasi_tid_t tid, void *aux);
#else
struct fd_table;
typedef void wasi_threadentry_t(wasi_tid_t tid, struct fd_table *fds, void *aux);
#endif

typedef struct {
  wasi_threadentry_t *entry_point;
  void *stack;
  size_t stack_len;
  void *argument;
} wasi_threadattr_t;
_Static_assert(offsetof(wasi_threadattr_t, entry_point) == 0, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_threadattr_t, stack) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_threadattr_t, stack) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_threadattr_t, stack_len) == 8, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_threadattr_t, stack_len) == 16, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || offsetof(wasi_threadattr_t, argument) == 12, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || offsetof(wasi_threadattr_t, argument) == 24, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || sizeof(wasi_threadattr_t) == 16, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || sizeof(wasi_threadattr_t) == 32, "Incorrect layout");
_Static_assert(sizeof(void *) != 4 || _Alignof(wasi_threadattr_t) == 4, "Incorrect layout");
_Static_assert(sizeof(void *) != 8 || _Alignof(wasi_threadattr_t) == 8, "Incorrect layout");

#ifdef __cplusplus
}  // extern "C"
#endif

#endif
